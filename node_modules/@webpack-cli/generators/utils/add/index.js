"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const prop_types_1 = require("@webpack-cli/utils/prop-types");
exports.PROPS = Array.from(prop_types_1.default.keys());
/**
 *
 * Replaces the string with a substring at the given index
 * https://gist.github.com/efenacigiray/9367920
 *
 * @param	{String} str - string to be modified
 * @param	{Number} index - index to replace from
 * @param	{String} replace - string to replace starting from index
 *
 * @returns	{String} string - The newly mutated string
 *
 */
function replaceAt(str, index, replace) {
    return str.substring(0, index) + replace + str.substring(index + 1);
}
exports.replaceAt = replaceAt;
/**
 *
 * Checks if the given array has a given property
 *
 * @param	{Array} arr - array to check
 * @param	{String} prop - property to check existence of
 *
 * @returns	{Boolean} hasProp - Boolean indicating if the property
 * is present
 */
exports.traverseAndGetProperties = (arr, prop) => {
    let hasProp = false;
    arr.forEach((p) => {
        if (p[prop]) {
            hasProp = true;
        }
    });
    return hasProp;
};
/**
 *
 * Search config properties
 *
 * @param {Object} answers	Prompt answers object
 * @param {String} input	Input search string
 *
 * @returns {Promise} Returns promise which resolves to filtered props
 *
 */
exports.searchProps = (answers, input) => {
    input = input || "";
    return Promise.resolve(exports.PROPS.filter((prop) => prop.toLowerCase().includes(input.toLowerCase())));
};
