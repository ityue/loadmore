"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const webpack_scaffold_1 = require("@webpack-cli/webpack-scaffold");
const validate_1 = require("./validate");
/**
 *
 * Prompts for entry points, either if it has multiple or one entry
 *
 * @param	{Object} self 	- A variable holding the instance of the prompting
 * @param	{Object} answer - Previous answer from asking if the user wants single or multiple entries
 * @returns	{Object} An Object that holds the answers given by the user, later used to scaffold
 */
function entry(self, multiEntries) {
    let entryIdentifiers;
    let result;
    if (multiEntries) {
        result = self
            .prompt([
            webpack_scaffold_1.InputValidate("multipleEntries", "What do you want to name your bundles? (separated by comma)", validate_1.default, "pageOne, pageTwo")
        ])
            .then((multipleEntriesAnswer) => {
            const webpackEntryPoint = {};
            entryIdentifiers = multipleEntriesAnswer.multipleEntries.split(",");
            function forEachPromise(entries, fn) {
                return entries.reduce((promise, prop) => {
                    const trimmedProp = prop.trim();
                    return promise.then((n) => {
                        if (n) {
                            Object.keys(n).forEach((val) => {
                                if (n[val].charAt(0) !== "(" &&
                                    n[val].charAt(0) !== "[" &&
                                    !n[val].includes("function") &&
                                    !n[val].includes("path") &&
                                    !n[val].includes("process")) {
                                    n[val] = `\'./${n[val].replace(/"|'/g, "").concat(".js")}\'`;
                                }
                                webpackEntryPoint[val] = n[val];
                            });
                        }
                        else {
                            n = {};
                        }
                        return fn(trimmedProp);
                    });
                }, Promise.resolve());
            }
            return forEachPromise(entryIdentifiers, (entryProp) => self.prompt([
                webpack_scaffold_1.InputValidate(`${entryProp}`, `What is the location of "${entryProp}"?`, validate_1.default, `src/${entryProp}`)
            ])).then((entryPropAnswer) => {
                Object.keys(entryPropAnswer).forEach((val) => {
                    if (entryPropAnswer[val].charAt(0) !== "(" &&
                        entryPropAnswer[val].charAt(0) !== "[" &&
                        !entryPropAnswer[val].includes("function") &&
                        !entryPropAnswer[val].includes("path") &&
                        !entryPropAnswer[val].includes("process")) {
                        entryPropAnswer[val] = `\'./${entryPropAnswer[val]
                            .replace(/"|'/g, "")
                            .concat(".js")}\'`;
                    }
                    webpackEntryPoint[val] = entryPropAnswer[val];
                });
                return webpackEntryPoint;
            });
        });
    }
    else {
        result = self
            .prompt([webpack_scaffold_1.Input("singularEntry", "Which will be your application entry point?", "src/index")])
            .then((singularEntryAnswer) => {
            let { singularEntry } = singularEntryAnswer;
            singularEntry = `\'./${singularEntry.replace(/"|'/g, "").concat(".js")}\'`;
            if (singularEntry.length <= 0) {
                self.usingDefaults = true;
            }
            return singularEntry;
        });
    }
    return result;
}
exports.default = entry;
